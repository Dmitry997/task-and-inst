minikube start 
minikube stop
minikube delete - Delete your local cluster:



kubectl get pods
kubectl get deploy
kubectl get nodes

kubectl get svc - проверить запущенные сервисы
kubectl get services  - просмотреть запущенные сервисы

minikube dashboard   - запустить дашборд в браузере 


 
ADV4000
kubectl run hello --image=dmitry997/devops:latest --port=80 
(запустит pod под именем hello из образа хранящегося в докерхабе dmitry997/devops:latest, откроет порт 80)

Все работает, но нужно пробросить порт с нашей локальной машины в pod
kubectl port-forward hello 7080:80 - пробросит порты, извне доступно по  http://localhost:7080/

Все это работает, но через поды никто не делает. В реальном мире используются файлы манифеста.
Создаем манифест файл (pod-dmitry.yaml) с нужным содержанием и запускаем:
kubectl apply -f pod-dmitry.yaml   (-f указывает на имя файла манифеста)
kubectl delete -f pod-dmitry.yaml -Грохнуть все, что создано манифест файлом

Запускаем так же:
kubectl port-forward pod-dmitry 7080:80 - пробросит порты, извне доступно по  http://localhost:7080/

Подами управляют через deployment, а не на прямую. (дает возможность скалинга, отказоустойчивости и тд.)
kubectl create deployment deploy-dmitry --image=dmitry997/devops:latest
kubectl scale deployment deploy-dmitry --replicas 2  (Изменит количество подов на 2 и будет поддерживать в таком состоянии)

Работает с изменением image.
kubectl rollout history deployment/deploy-dmitry   (выведет историю обновлений)
kubectl rollout status deployment/deploy-dmitry   (узнать как дела сейчас)

kubectl set image deployment/deploy-dmitry имя_контейнера_деплоймента=dmitry997/devops:version1 --record  (Обновит все Поды и заменит имейджи)

kubectl rollout restart deployment/deploy-dmitry  (пересоберет деплоймент, удобно если обновил имейдж, но сохранил с темже тагом)




